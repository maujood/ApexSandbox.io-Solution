public static List<Integer> squareList(List<Integer> nums){
    List<Integer> squares = new List<Integer>();
    if (nums.size() == 0) return squares;
    Integer i = 0;
    for (; i<nums.size() && nums[i] < 0; i++);

    // nums only has +ve numbers, we need forward loop
    if (i == 0) {
        for (Integer j=0; j<nums.size(); j++) {
            squares.add(nums[j] * nums[j]);
        }
        return squares;
    }

    // nums only has -ve numbers
    if (i == nums.size()) {
        for (Integer j = nums.size() - 1; j >= 0; j--) {
            squares.add(nums[j] * nums[j]);
        }
        return squares;
    }

    // Use two pointers
    Integer pve = i;
    Integer nve = i;
    if (nums[i] < 0) pve++; else nve--;

    for (Integer j=0; j<nums.size(); j++) {
        if (pve == nums.size() || Math.abs(nums[nve]) < nums[pve]) {
            squares.add(nums[nve] * nums[nve]);
            nve--;
        }
        else {
            squares.add(nums[pve] * nums[pve]);
            pve++;
        }
    }
    return squares;
}